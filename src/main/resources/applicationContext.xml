<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
       <context:component-scan base-package="com.wanerchuan" />
       <context:annotation-config/>

       <!-- data base set configure -->
       <context:property-placeholder location="classpath:config/jdbc.properties"/>

       <bean id="baseDataSource" class="com.alibaba.druid.pool.DruidDataSource"
             init-method="init" destroy-method="close">
              <!-- 数据库基本信息配置 -->
              <property name="driverClassName" value="${jdbc.driverClassName}"/>
              <property name="url" value="${jdbc.url}"/>
              <property name="username" value="${jdbc.username}"/>
              <property name="password" value="${jdbc.password}"/>
              <!-- 初始化连接数量 -->
              <property name="initialSize" value="1"/>
              <!-- 最大并发连接数 -->
              <property name="maxActive" value="20"/>
              <!-- 最小空闲连接数 -->
              <property name="minIdle" value="1"/>
              <!-- 配置获取连接等待超时的时间 -->
              <property name="maxWait" value="6000"/>
              <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
              <property name="timeBetweenEvictionRunsMillis" value="6000"/>

              <property name="minEvictableIdleTimeMillis" value="300000"></property>

              <!-- 用来检测连接是否有效的sql，要求是一个查询语句-->
              <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
              <!-- 申请连接的时候检测 -->
              <property name="testWhileIdle" value="true"/>
              <!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
              <property name="testOnBorrow" value="false"/>
              <!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能  -->
              <property name="testOnReturn" value="false"/>
              <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
              <property name="poolPreparedStatements" value="true"/>
              <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>
              <!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
                      监控统计用的filter:stat
                      日志用的filter:log4j
                      防御SQL注入的filter:wall -->
              <property name="filters" value="stat"/>
       </bean>
       <context:component-scan base-package="com.wanerchuan.service.impl"></context:component-scan>
       <!-- 事务支持  start-->
       <!-- PlatformTransactionMnager -->
       <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
              <property name="dataSource" ref="baseDataSource" />
       </bean>
       <!-- enable transaction annotation support -->
       <tx:annotation-driven transaction-manager="txManager" />
       <!-- 事务支持  end-->

       <!-- define the SqlSessionFactory -->
       <bean id="baseSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
              <property name="dataSource" ref="baseDataSource"/>
              <property name="configLocation" value="classpath:config/mybatis-config.xml"/>
              <property name="mapperLocations" value="classpath:persistence/*/*.xml"/>
       </bean>
    <!-- scan for mappers and let them be autowired -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
        <property name="basePackage" value="com.wanerchuan.dao"/>
    </bean>
</beans>